/*
  # Create Admin Users Table

  ## Purpose
  This migration creates a secure admin users table for managing administrative access
  to the portfolio website. Only pre-approved users in this table can access admin features.

  ## Tables Created
  
  ### `admin_users`
  - `id` (uuid, primary key) - Unique identifier for each admin
  - `email` (text, unique) - Admin email address for login
  - `password_hash` (text) - Securely hashed password
  - `full_name` (text) - Admin's full name
  - `is_active` (boolean) - Whether this admin account is active
  - `created_at` (timestamptz) - When the admin was created
  - `last_login_at` (timestamptz) - Last successful login timestamp

  ## Security
  - Enable RLS on `admin_users` table
  - No public access - only authenticated admins can read their own data
  - Password is stored as bcrypt hash (handled by application layer)
  
  ## Initial Data
  - Password will be set via application on first use
  
  ## Notes
  - This is separate from Supabase auth to keep admin access isolated
  - Flexible design allows adding more admins via database inserts
*/

-- Create admin_users table
CREATE TABLE IF NOT EXISTS admin_users (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  email text UNIQUE NOT NULL,
  password_hash text NOT NULL,
  full_name text NOT NULL,
  is_active boolean DEFAULT true NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  last_login_at timestamptz,
  CONSTRAINT email_format CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
);

-- Enable RLS
ALTER TABLE admin_users ENABLE ROW LEVEL SECURITY;

-- Create index for faster email lookups
CREATE INDEX IF NOT EXISTS idx_admin_users_email ON admin_users(email);

-- RLS Policy: Admins can only read their own data (no one can access via Supabase client directly)
-- This table is meant to be accessed via Edge Functions only
CREATE POLICY "No direct access to admin_users"
  ON admin_users
  FOR ALL
  TO authenticated, anon
  USING (false)
  WITH CHECK (false);

-- Insert initial admin user
-- Note: Password hash for "shant128395Shakart" using bcrypt
-- This is a placeholder - the actual hash will be generated by the application
INSERT INTO admin_users (email, password_hash, full_name, is_active)
VALUES (
  'shant101094@gmail.com',
  '$2a$10$placeholder_this_will_be_replaced_by_app',
  'Shant',
  true
)
ON CONFLICT (email) DO NOTHING;
